// <auto-generated />
using MealDB1.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MealDB1.Entities.Migrations
{
    [DbContext(typeof(MealDbContext))]
    [Migration("20200726153148_initialmigration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MealDB1.Entities.Model.Countrys", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("MealDB1.Entities.Model.MainIngredients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MainIngredientDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainIngredientImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainIngredientName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MainIngredients");
                });

            modelBuilder.Entity("MealDB1.Entities.Model.Meals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountrysId")
                        .HasColumnType("int");

                    b.Property<int>("MainIngredientsId")
                        .HasColumnType("int");

                    b.Property<string>("MealDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MealImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MealName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubIngredientFive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubIngredientFiveUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubIngredientFour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubIngredientFourUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubIngredientOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubIngredientOneUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubIngredientSix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubIngredientSixUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubIngredientThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubIngredientThreeUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubIngredientTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubIngredientTwoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountrysId")
                        .IsUnique();

                    b.HasIndex("MainIngredientsId")
                        .IsUnique();

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("MealDB1.Entities.Model.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserSecondName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("MealDB1.Entities.Model.Meals", b =>
                {
                    b.HasOne("MealDB1.Entities.Model.Countrys", "Countrys")
                        .WithOne("Meals")
                        .HasForeignKey("MealDB1.Entities.Model.Meals", "CountrysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MealDB1.Entities.Model.MainIngredients", "MainIngredients")
                        .WithOne("Meals")
                        .HasForeignKey("MealDB1.Entities.Model.Meals", "MainIngredientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
